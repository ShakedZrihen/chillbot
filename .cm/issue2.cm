# -*- mode: yaml -*-

manifest:
  version: 1.0

automations:
  welcome_message:
    if:
      - true
    run:
      - action: add-comment@v1
        args:
          comment: |
            {{ [] | isFirstCommit(branch.author) }}!
      - action: add-comment@v1
        args:
          comment: |
            Welcome @{{ pr.author }}!

  estimated_time_to_review:
    if:
      - true
    run:
      - action : add-label@v1
        args:
          label: '{{ calc.etr }} min review'
          color: {{ 'E94637' if (calc.etr >= 20) else ('FBBD10' if (calc.etr >= 5) else '36A853') }}

  safe_changes:
    # The `if` key has a list of conditions, each condition is specified as a Jinja expression
    # in a double curly braces. Expressions are evaluated by gitStream on a PR when triggered.
    if:
      # Given the PR code changes, check that only formatting changes were made
      - {{ is.formatting or is.docs or is.tests }}
    # `run` key has a list of actions, which are executed one by one whenever the automation
    # conditions are met.
    run:
      # When the changes are validated as formatting only, you can help to speed up the review
      # by adding a label that marks it accordingly.
      - action: add-label@v1
        args:
          label: 'safe-changes'
      # You can uncomment the following action to get gitStream can even automatically approve
      # such PRs to save reviewers time for such changes.
      # - action: approve@v1

  admin_autoapprove:
    if:
      - {{ is.admin }}
    run:
      - action: approve@v1

  review_cicd:
    if:
      - {{ files | match(regex=r/.github\/workflows\/.*\.yml/) | some }}
    run:
      - action: add-reviewers@v1
        args:
          team_reviewers: [infrastructure]

calc:
  etr: {{ branch | estimatedReviewTime }}
is:
  formatting: {{ source.diff.files | isFormattingChange }}
  docs: {{ files | allDocs }}
  tests: {{ files | allTests }}
  terragrunt: {{ files | match(regex=r/(...)\/terragrunt.hcl/) | some }}
  admin: {{ pr.author | includes(list=['ianwesleyarmstrong']) }}
  aws: {{ files | match(regex=r/aws\/(...)/) | some }}
  snowflake: {{ files | match(regex=r/snowflake\/(...)/) | some }}
  snowflake_access: {{ files | match(regex=r/(...)\/(roles)|(users)\.yaml/) | some }}
