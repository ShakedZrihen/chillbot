{"version":3,"sources":["MainPage.jsx","theme.js","Header.jsx","CardForm/ResourcePicker.jsx","resources/gifs.js","resources/baseCard.js","resources/botMessage.js","CardForm/consts.jsx","consts.js","CardForm/CardForm.jsx","style.js","SendSongPage.jsx","SongHug/SongHug.jsx","SongHugPage.jsx","RegisterPage.jsx","App.jsx","index.jsx"],"names":["MainPage","history","useHistory","useEffect","document","body","id","className","Button","onClick","localStorage","getItem","push","pathname","COLORS","NEW_COLOR","theme","createMuiTheme","palette","success","main","primary","secondary","error","red","A400","useStyles","makeStyles","title","color","fontSize","marginTop","Header","props","classes","ResourcePicker","resources","allowBlank","map","resource","i","src","clsx","selected","value","event","newSelected","console","log","setValue","TITLE_BLOCK","type","text","wrap","fontType","size","weight","horizontalAlignment","isSubtle","SENDER_BLOCK","IMAGE_BLOCK","url","altText","isVisible","selectAction","DESCRIPTION_BLOCK","EXPLAINATION_BLOCK","BASE_CARD","contentType","content","$schema","version","buildCard","senderTitle","image","youtubeLink","description","titleBlock","senderBlock","imageBlock","descriptionBlock","generateMessage","card","email","toPersonEmail","attachments","VALIDATION_ERRORS","NOT_VALID","EMPTY","VALIDATION_PASSED","BOT_TOKEN","CardForm","useState","GIFs","setImage","musicLink","setMusicLink","setEmail","setDescription","setError","loading","setLoading","currentUser","emailError","setEmailErrorMsg","isEmailError","youtubeError","setYoutubeErrorMsg","isYoutubeError","showToast","setShowToast","Alert","elevation","variant","handleSend","a","fetch","method","headers","Authorization","then","res","json","items","nickName","catch","name","sender","formattedLink","message","JSON","stringify","e","htmlFor","TextField","onChange","emailValue","target","trim","length","indexOf","helperText","multiline","rows","newDescription","CircularProgress","disableShrink","Snackbar","open","autoHideDuration","onClose","severity","pageTitle","margin","textAlign","flexGrow","container","multilineColor","minWidth","minHeight","contentContainer","display","flexFlow","justifyContent","cardContainer","media","height","width","cardText","border","borderImage","backgroundColor","SendSongPage","query","URLSearchParams","useLocation","search","Container","maxWidth","get","SongHug","setItem","receiver","displayLink","config","youtube","playerVars","autoplay","playing","to","senderMail","style","marginBottom","SongHugPage","RegisterPage","App","path","ReactDOM","render","ThemeProvider","querySelector"],"mappings":"iRA0CeA,EApCE,WACf,IAAMC,EAAUC,cAEhBC,qBAAU,WAER,OADAC,SAASC,KAAKC,GAAK,eACZ,WACLF,SAASC,KAAKC,GAAK,MAEpB,IAcH,OACE,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,SAEf,cAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,QAjBf,WACyB,MAAvCC,aAAaC,QAAQ,eACvBV,EAAQW,KAAK,CACXC,SAAU,cAGZZ,EAAQW,KAAK,CACXC,SAAU,eAUZ,0BAGA,qBAAKN,UAAU,OAAf,8BACA,qBAAKA,UAAU,c,iCCjCRO,EACF,UADEA,EAEI,UAFJA,EAGA,UAHAA,EAID,UAGCC,EAEL,UAqBOC,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMN,GAERO,QAAS,CACPD,KAAMN,GAERQ,UAAW,CACTF,KAAMN,GAERS,MAAO,CACLH,KAAMI,IAAIC,SCzBVC,EAAYC,aAAW,SAACX,GAAD,MAAY,CACvCY,MAAO,CACLC,MAAOd,EACPe,SAAU,GACVC,UAAW,SAaAC,EAPA,SAACC,GAAW,IAClBL,EAASK,EAATL,MACDM,EAAUR,IAEhB,OAAO,mBAAGnB,UAAW2B,EAAQN,MAAtB,SAA8BA,K,0DCexBO,G,MA3BQ,SAACF,GAAW,IACzBL,EAAiCK,EAAjCL,MAAOQ,EAA0BH,EAA1BG,UAA0BH,EAAfI,WAO1B,OACE,sBAAK9B,UAAU,UAAf,UACE,uBAAOA,UAAU,eAAjB,SAAiCqB,IACjC,qBAAKrB,UAAU,oBAAf,SACG6B,EAAUE,KAAI,SAACC,EAAUC,GAAX,OACb,qBAEEC,IAAKF,EACLhC,UAAWmC,YAAK,WAAY,CAC1BC,SAAUJ,GAAYN,EAAMW,QAE9BnC,QAAS,SAACoC,GAAD,OAhBUC,EAgBqBP,EAfhDQ,QAAQC,IAAI,UAAWF,QACvBb,EAAMgB,SAASH,GAFI,IAAQA,IAWdN,aCpBF,GACb,+DACA,+EACA,iEACA,4EACA,+EACA,+EACA,6DACA,gECRWU,EAAc,CACzBC,KAAM,YACNC,KAAM,GACNC,MAAM,EACNC,SAAU,UACVC,KAAM,QACNC,OAAQ,SACR3B,MAAO,SACP4B,oBAAqB,SACrBC,UAAU,GAGCC,EAAe,CAC1BR,KAAM,YACNC,KAAM,WACNK,oBAAqB,SACrBD,OAAQ,UAGGI,EAAc,CACzBT,KAAM,QACNI,KAAM,QACNE,oBAAqB,SACrBI,IAAK,WACLC,QAAS,aACTC,WAAW,EACXC,aAAc,CACZb,KAAM,iBACNU,IAAK,iBAIII,EAAoB,CAC/Bd,KAAM,YACNC,KAAM,GACNC,MAAM,EACNI,oBAAqB,SACrBD,OAAQ,SACRD,KAAM,SACN1B,MAAO,UAGIqC,EAAqB,CAChCf,KAAM,YACNC,KAAM,+CACNC,MAAM,EACNI,oBAAqB,SACrBC,UAAU,GAGCS,EAAY,CACvBC,YAAa,0CACbC,QAAS,CACPlB,KAAM,eACNmB,QAAS,qDACTC,QAAS,MACTlE,KAAM,CACJ6C,EACAS,EACAC,EACAK,EACAC,GAEFF,aAAc,CACZb,KAAM,iBACNU,IAAK,kBA8BIW,EAzBG,SAAC5C,EAAO6C,EAAaC,EAAOC,EAAaC,GACzD,IAAMC,EAAU,2BAAQ3B,GAAR,IAAqBE,KAAMxB,IACrCkD,EAAW,2BAAQnB,GAAR,IAAsBP,KAAMqB,IACvCM,EAAU,2BACXnB,GADW,IAEdC,IAAKa,EACLV,aAAa,2BAAMJ,EAAYI,cAAnB,IAAiCH,IAAKc,MAE9CK,EAAgB,2BAAQf,GAAR,IAA2Bb,KAAMwB,IACvD,OAAO,2BACFT,GADL,IAEEE,QAAQ,2BACHF,EAAUE,SADR,IAELL,aAAa,2BAAMJ,EAAYI,cAAnB,IAAiCH,IAAKc,IAClDtE,KAAM,CACJwE,EACAC,EACAC,EACAC,EACAd,QC9DO,SAASe,EAAgBC,EAAMC,GAC5C,MAAO,CACLC,cAAeD,EACfE,YAAa,CAACH,GACd9B,KAAM,wD,aC/BGkC,EACF,CACHC,UAAW,6BACXC,MAAO,kBAHFF,EAKA,CACLC,UAAW,8BACXC,MAAO,sBAGFC,EAAoB,GCVpBC,EACX,6G,kBCoNaC,EArME,SAAC1D,GAAW,IAAD,EACA2D,mBAASC,EAAK,IADd,mBACnBnB,EADmB,KACZoB,EADY,OAEQF,mBAAS,IAFjB,mBAEnBG,EAFmB,KAERC,EAFQ,OAGAJ,mBAAS3D,EAAMkD,OAHf,mBAGnBA,EAHmB,KAGZc,EAHY,OAIYL,mBAAS,IAJrB,mBAInBhB,EAJmB,KAINsB,EAJM,OAKAN,mBAAS,IALT,mBAKZO,GALY,aAMIP,oBAAS,GANb,mBAMnBQ,EANmB,KAMVC,EANU,OAOJT,mBAASlF,aAAaC,QAAQ,gBAA7C2F,EAPmB,sBASaV,mBAASH,GATtB,mBASnBc,EATmB,KASPC,EATO,KAUpBC,EAAeF,IAAed,EAVV,EAWiBG,mBAASH,GAX1B,mBAWnBiB,EAXmB,KAWLC,GAXK,KAYpBC,GAAiBF,IAAiBjB,EAZd,GAaQG,oBAAS,GAbjB,qBAanBiB,GAbmB,MAaRC,GAbQ,MAepBC,GAAQ,SAAC9E,GACb,OAAO,cAAC,IAAD,yBAAU+E,UAAW,EAAGC,QAAQ,UAAahF,GAA7C,IAAoD1B,UAAU,YAGjE2G,GAAU,uCAAG,wCAAAC,EAAA,6DACjBd,GAAW,GADM,SAEEe,MAAM,yCAAD,OAA0CjC,GAAS,CACzEkC,OAAQ,MACRC,QAAS,CACPC,cAAc,UAAD,OAAY7B,GACzB,eAAgB,sBAGjB8B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASA,EAAIE,MAAM,GAAGC,YAC3BC,OAAM,kBAAM1C,KAXE,cAEX2C,EAFW,gBAaIV,MAAM,yCAAD,OACiBd,GACzC,CACEe,OAAQ,MACRC,QAAS,CACPC,cAAc,UAAD,OAAY7B,GACzB,eAAgB,sBAInB8B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASA,EAAIE,MAAM,GAAGC,YAC3BC,OAAM,kBAAMvB,KAzBE,UAaXyB,EAbW,OA2BZrD,GAAUS,GAAUY,EA3BR,wBA4BfI,EAAS,0BACTE,GAAW,GA7BI,kCAiCX2B,EDjEU,4CCkEV,4BACiB7C,EADjB,wBACsCY,EADtC,mBAC0DgC,EAD1D,uBAC+EzB,GACrFvD,QAAQC,IAAI,gBAAiBgF,GACvBpG,EArCW,aAqCGkG,EArCH,KAsCXrD,EAtCW,UAsCMsD,EAtCN,qBAuCX7C,EAAOV,EAAU5C,EAAO6C,EAAaC,EAAOsD,EAAepD,GAC3DqD,EAAUhD,EAAgBC,EAAMC,GAxCrB,UA0CXiC,MAAM,oCAAqC,CAC/CC,OAAQ,OACRC,QAAS,CACPC,cAAc,UAAD,OAAY7B,GACzB,eAAgB,oBAElBrF,KAAM6H,KAAKC,UAAUF,KAEpBJ,OAAM,SAACO,GAAD,OAAOrF,QAAQC,IAAIoF,MACzBZ,MAAK,kBAAMnB,GAAW,MAnDR,QAqDjBS,IAAa,GArDI,4CAAH,qDAiGhB,OACE,sBAAKvG,UAAU,oBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,gCACE,sBAAKA,UAAU,iBAAf,UACE,uBAAO8H,QAAQ,QAAQ9H,UAAU,eAAjC,wCAGA,cAAC+H,EAAA,EAAD,CACEhI,GAAG,6BACH2G,QAAQ,WACR1G,UAAS,wBAAmBkG,EAAe,QAAU,IACrD7D,MAAOuC,EACPoD,SA9Bc,SAAC1F,GACzB,IAAM2F,EAAa3F,EAAM4F,OAAO7F,MAGhC,OAFAqD,EAASuC,GAELA,GAAcA,EAAWE,OAAOC,OAAS,EACvCH,EAAWI,QAAQ,cAAgB,GACrCpC,EAAiBlB,EAAwBC,YAClC,IAETiB,EAAiBf,IACV,IAGTe,EAAiBlB,EAAwBE,QAClC,IAiBGqD,WAAYtC,EACZhF,MAAOkF,OAGX,sBAAKlG,UAAU,iBAAf,UACE,uBAAO8H,QAAQ,cAAc9H,UAAU,eAAvC,qCAGA,cAAC+H,EAAA,EAAD,CACEhI,GAAG,6BACH2G,QAAQ,WACR1G,UAAS,kBAAaqG,GAAiB,QAAU,IACjDkC,WAAS,EACTC,KAAM,EACNnG,MAAOmD,EACPwC,SA/DoB,SAAC1F,GAC/B,IAAMkD,EAAYlD,EAAM4F,OAAO7F,MAG/B,OAFAoD,EAAaD,GAETA,GAAaA,EAAU2C,OAAOC,OAAS,EACrC5C,EAAU6C,QAAQ,sBAAwB,GAC5CjC,GAAmBrB,EAA0BC,YACtC,IAEToB,GAAmBlB,IACZ,IAGTkB,GAAmBrB,EAA0BE,QACtC,IAkDGqD,WAAYnC,EACZnF,MAAOqF,QAGX,sBAAKrG,UAAU,iBAAf,UACE,uBAAO8H,QAAQ,UAAU9H,UAAU,eAAnC,yBAGA,cAAC+H,EAAA,EAAD,CACEQ,WAAS,EACTxI,GAAG,aACH2G,QAAQ,WACR1G,UAAU,UACVqC,MAAOgC,EACP2D,SArFmB,SAAC1F,GAC9B,IAAMmG,EAAiBnG,EAAM4F,OAAO7F,MAChCoG,EAAeL,QAAU,IAC3BzC,EAAe8C,IAmFPD,KAAM,UAKZ,qBAAKxI,UAAU,0BAAf,SACE,cAAC,EAAD,CACEqB,MAAM,eACNQ,UAAWyD,EACXxD,YAAY,EACZO,MAAO8B,EACPzB,SAAU6C,SAKfM,EACC,cAAC6C,EAAA,EAAD,CAAkBC,eAAa,EAAC3I,UAAU,YAE1C,cAACC,EAAA,EAAD,CAAQD,UAAWmC,YAAK,cAAejC,QAASyG,GAAhD,0BAIF,cAACiC,EAAA,EAAD,CACEC,KAAMvC,GACNwC,iBAAkB,IAClBC,QAAS,kBAAMxC,IAAa,IAH9B,SAKE,cAACC,GAAD,CAAOuC,QAAS,kBAAMxC,IAAa,IAAQyC,SAAS,UAApD,0C,QC1MO5H,eAAW,SAACX,GAAD,gBACxBwI,UAAW,CACT3H,MAAOf,EACP2I,OAAQ,YACRC,UAAW,UAEb9H,MAAO,CACL+H,SAAU,EACV9H,MAAOf,GAET8I,UAAW,CACTH,OAAQ,WAEVI,eAAgB,CACdhI,MAAOf,GAEToE,KAAM,CACJ4E,SAAU,IACVC,UAAW,IACXL,UAAW,UAEbM,iBAAkB,CAChBC,QAAS,OACTC,SAAU,MACVC,eAAgB,iBAElBC,cAAe,GACfC,MAAO,CACLC,OAAQ,IACRC,MAAO,KAETC,SAAU,CACR3I,MAAOf,IAhCe,8BAkCT,CACb2J,OAAQ,yBACRC,YACE,0EArCoB,2BAuCZ,CACVjB,OAAQ,YACRc,MAAO,OACPI,gBAAiB7J,EACjBe,MAAOf,EACP,UAAW,CACT6J,gBAAiB7J,EACjBe,MAAOf,KA9Ca,KC2CX8J,G,MApCM,WACnB,IAAMC,EAAQ,IAAIC,gBAAgBC,cAAcC,QAC1C9I,EAAUR,IACVzB,EAAUC,cAHS,EAIH0F,mBAASlF,aAAaC,QAAQ,gBAA7C2F,EAJkB,oBAOzB,GAFAvD,QAAQC,IAAI,cAAesD,GAEtBA,EAcL,OARAnG,qBAAU,WAGR,OAFAC,SAASC,KAAKC,GAAK,eAEZ,WACLF,SAASC,KAAKC,GAAK,MAEpB,IAGD,qBAAKC,UAAU,gBAAf,SACE,eAAC0K,EAAA,EAAD,CACE1K,UAAWmC,YAAKR,EAAQ0H,UAAW,wBACnCsB,SAAS,KAFX,UAIE,cAAC,EAAD,CAAQtJ,MAAO,wBACf,qBAAKrB,UAAW2B,EAAQ8H,iBAAxB,SACE,cAAC,EAAD,CAAU7E,MAAO0F,EAAMM,IAAI,kBArBjClL,EAAQW,KAAK,CACXC,SAAU,gB,yBCyBDuK,I,OArCC,SAACnJ,GACf,IAMMiF,EAAa,SAAC/B,GAClBpC,QAAQC,IAAImC,GACZzE,aAAa2K,QAAQ,cAAepJ,EAAMqJ,WAG5C,OACE,sBAAK/K,UAAU,mBAAf,UACE,cAAC,IAAD,CAAasD,IAAK5B,EAAMsJ,YAAaC,OAb1B,CACbC,QAAS,CACPC,WAAY,CAAEC,SAAU,KAW6BC,SAAS,IAC9D,sBAAKrL,UAAU,cAAf,UACG0B,EAAM8F,OADT,eAC4B,sBAAMxH,UAAU,UAAhB,yBAE5B,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAMsL,GAAE,0BAAqB5J,EAAM6J,YAAeC,MAAO,CAAEC,aAAc,QAAzE,SACE,oBAAGzL,UAAU,WAAWE,QAAS,kBAAMyG,EAAWjF,EAAM8F,SAAxD,kBACQ9F,EAAM8F,OADd,mBACsC,UAGxC,cAAC,IAAD,CAAM8D,GAAE,YAAR,SACE,cAACrL,EAAA,EAAD,CACED,UAAU,aACVE,QAAS,kBAAMyG,EAAWjF,EAAM8F,SAFlC,oCCIKkE,GA5BK,WAClB,IAAMpB,EAAQ,IAAIC,gBAAgBC,cAAcC,QAC1C9I,EAAUR,IAUhB,OARAvB,qBAAU,WAGR,OAFAC,SAASC,KAAKC,GAAK,cAEZ,WACLF,SAASC,KAAKC,GAAK,MAEpB,IAGD,qBAAKC,UAAU,eAAf,SACE,cAAC0K,EAAA,EAAD,CACE1K,UAAWmC,YAAKR,EAAQ0H,UAAW,oBACnCsB,SAAS,KAFX,SAIE,cAAC,GAAD,CACEI,SAAUT,EAAMM,IAAI,YACpBI,YAAaV,EAAMM,IAAI,eACvBpD,OAAQ8C,EAAMM,IAAI,UAClBW,WAAYjB,EAAMM,IAAI,qBC8BjBe,I,OAlDM,WACnB,IAAMhK,EAAUR,IADS,EAECkE,mBAAS,IAFV,mBAElBT,EAFkB,KAEXc,EAFW,KAGnBhG,EAAUC,cAEhBC,qBAAU,WAGR,OAFAC,SAASC,KAAKC,GAAK,eAEZ,WACLF,SAASC,KAAKC,GAAK,MAEpB,IASH,OACE,qBAAKC,UAAU,oBAAf,SACE,eAAC0K,EAAA,EAAD,CACE1K,UAAWmC,YAAKR,EAAQ0H,UAAW,wBACnCsB,SAAS,KAFX,UAIE,cAAC,EAAD,CAAQtJ,MAAO,qBACf,mBAAGrB,UAAU,WAAb,qEAGA,sBAAKA,UAAU,iBAAf,UACE,uBAAO8H,QAAQ,QAAQ9H,UAAU,eAAjC,sCAGA,cAAC+H,EAAA,EAAD,CACEhI,GAAG,6BACH2G,QAAQ,WACR1G,UAAS,gBACTqC,MAAOuC,EACPoD,SAAU,SAAC1F,GAAD,OAAWoD,EAASpD,EAAM4F,OAAO7F,aAG/C,cAACpC,EAAA,EAAD,CAAQD,UAAWmC,YAAK,cAAejC,QA7BtB,SAACoC,GACtBnC,aAAa2K,QAAQ,cAAelG,GACpClF,EAAQW,KAAK,CACXC,SAAU,eA0BR,6BCxBOsL,GArBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,OCdVC,IAASC,OACP,cAACC,EAAA,EAAD,CAAevL,MAAOA,EAAtB,SACE,cAAC,GAAD,MAEFZ,SAASoM,cAAc,W","file":"static/js/main.85123af7.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./MainPage.scss\";\nimport Button from \"@material-ui/core/Button\";\n\nconst MainPage = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    document.body.id = \"mainPageBody\";\n    return () => {\n      document.body.id = \"\";\n    };\n  }, []);\n\n  const handleClick = () => {\n    if (localStorage.getItem(\"currentUser\") == null) {\n      history.push({\n        pathname: \"/register\",\n      });\n    } else {\n      history.push({\n        pathname: \"/sendsong\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"mainPageContainer\">\n      <div className=\"header\" />\n      <div className=\"logo\" />\n\n      <Button className=\"sendButton\" onClick={handleClick}>\n        Send SongHug\n      </Button>\n      <div className=\"love\">Spread The Love!</div>\n      <div className=\"heart\" />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport background from \"./resources/backgrounds\";\n\nexport const COLORS = {\n  PRIMERY: \"#428C7F\",\n  PRIMARY_SHADE: \"#3B7E72\",\n  SECONDARY: \"#2A3858\",\n  OFFWHITE: \"#F2F2F2\",\n};\n\nexport const NEW_COLOR = {\n  PRIMARY: \"#FF5959\",\n  TEXT: '#121213'\n};\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    success: {\n      main: COLORS.PRIMERY,\n    },\n    primary: {\n      main: COLORS.OFFWHITE,\n    },\n    secondary: {\n      main: COLORS.SECONDARY,\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NEW_COLOR } from \"./theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: NEW_COLOR.TEXT,\n    fontSize: 50,\n    marginTop: 120,\n  },\n}));\n\n//Make Someone Happy!\n\nconst Header = (props) => {\n  const {title} = props;\n  const classes = useStyles();\n\n  return <p className={classes.title}>{title}</p>;\n};\n\nexport default Header;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport \"./style.scss\";\n\n// props: title: string, resources: list[string], allowBlank: boolean, select: (id) => void\n\nconst ResourcePicker = (props) => {\n  const { title, resources, allowBlank } = props;\n\n  const handleChange = (event, newSelected) => {\n    console.log(\"select:\", newSelected);\n    props.setValue(newSelected);\n  };\n\n  return (\n    <div className=\"flexCol\">\n      <label className=\"textboxLabel\">{title}</label>\n      <div className=\"resourceContainer\">\n        {resources.map((resource, i) => (\n          <img\n            key={i}\n            src={resource}\n            className={clsx(\"resource\", {\n              selected: resource == props.value,\n            })}\n            onClick={(event) => handleChange(event, resource)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ResourcePicker;\n","export default [\n  \"https://robotunion.eu/wp-content/uploads/2019/06/giphy-2.gif\",\n  \"https://i.pinimg.com/originals/3e/87/b5/3e87b5e21e8b25f967c545fedcdf9230.gif\",\n  \"https://c.tenor.com/lVlj3Z219BMAAAAj/sound-classical-music.gif\",\n  \"https://media.tenor.com/images/d215ecf4447232813f51cb9ce3246b72/tenor.gif\",\n  \"https://i.pinimg.com/originals/59/a5/f0/59a5f025e75fe29104bd9597f5f7b0f1.gif\",\n  \"https://i.pinimg.com/originals/e7/ab/1e/e7ab1ede1eea99b1de9a8f6eaf0582a9.gif\",\n  \"https://media.giphy.com/media/dJ936uvjIVO9ybI2ci/giphy.gif\",\n  \"https://media3.giphy.com/media/ZFo9Jf12rYxWwr1mFd/source.gif\",\n];\n\n// TODO: USE this gifs instead of hard coded\n","export const TITLE_BLOCK = {\n  type: \"TextBlock\",\n  text: \"\",\n  wrap: true,\n  fontType: \"Default\",\n  size: \"Large\",\n  weight: \"Bolder\",\n  color: \"Accent\",\n  horizontalAlignment: \"Center\",\n  isSubtle: true,\n};\n\nexport const SENDER_BLOCK = {\n  type: \"TextBlock\",\n  text: \"${title}\",\n  horizontalAlignment: \"Center\",\n  weight: \"Bolder\",\n};\n\nexport const IMAGE_BLOCK = {\n  type: \"Image\",\n  size: \"Large\",\n  horizontalAlignment: \"Center\",\n  url: \"imageUrl\",\n  altText: \"*Cute GIF*\",\n  isVisible: true,\n  selectAction: {\n    type: \"Action.OpenUrl\",\n    url: \"Youtube link\",\n  },\n};\n\nexport const DESCRIPTION_BLOCK = {\n  type: \"TextBlock\",\n  text: \"\",\n  wrap: true,\n  horizontalAlignment: \"Center\",\n  weight: \"Bolder\",\n  size: \"Medium\",\n  color: \"Accent\",\n};\n\nexport const EXPLAINATION_BLOCK = {\n  type: \"TextBlock\",\n  text: \"click on the picture for listen to the song!\",\n  wrap: true,\n  horizontalAlignment: \"Center\",\n  isSubtle: true,\n};\n\nexport const BASE_CARD = {\n  contentType: \"application/vnd.microsoft.card.adaptive\",\n  content: {\n    type: \"AdaptiveCard\",\n    $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    version: \"1.2\",\n    body: [\n      TITLE_BLOCK,\n      SENDER_BLOCK,\n      IMAGE_BLOCK,\n      DESCRIPTION_BLOCK,\n      EXPLAINATION_BLOCK,\n    ],\n    selectAction: {\n      type: \"Action.OpenUrl\",\n      url: \"Youtube link\",\n    },\n  },\n};\n\nconst buildCard = (title, senderTitle, image, youtubeLink, description) => {\n  const titleBlock = { ...TITLE_BLOCK, text: title };\n  const senderBlock = { ...SENDER_BLOCK, text: senderTitle };\n  const imageBlock = {\n    ...IMAGE_BLOCK,\n    url: image,\n    selectAction: { ...IMAGE_BLOCK.selectAction, url: youtubeLink },\n  };\n  const descriptionBlock = { ...DESCRIPTION_BLOCK, text: description };\n  return {\n    ...BASE_CARD,\n    content: {\n      ...BASE_CARD.content,\n      selectAction: { ...IMAGE_BLOCK.selectAction, url: youtubeLink },\n      body: [\n        titleBlock,\n        senderBlock,\n        imageBlock,\n        descriptionBlock,\n        EXPLAINATION_BLOCK,\n      ],\n    },\n  };\n};\n\nexport default buildCard;\n","const MESSAGE = {\n  toPersonEmail: \"julie@example.com\",\n  attachments: [\n    {\n      contentType: \"application/vnd.microsoft.card.adaptive\",\n      content: {\n        type: \"AdaptiveCard\",\n        version: \"1.0\",\n        body: [\n          {\n            type: \"TextBlock\",\n            text: \"Adaptive Cards\",\n            size: \"large\",\n          },\n        ],\n        actions: [\n          {\n            type: \"Action.OpenUrl\",\n            url: \"http://adaptivecards.io\",\n            title: \"Learn More\",\n          },\n        ],\n      },\n    },\n  ],\n};\n\nexport default function generateMessage(card, email) {\n  return {\n    toPersonEmail: email,\n    attachments: [card],\n    text: \"If you see this - i failed to create songHug for you\",\n  };\n}\n","export const VALIDATION_ERRORS = {\n    EMAIL: {\n        NOT_VALID: 'Email must be a cisco mail',\n        EMPTY: 'Enter an email'\n    },\n    YOUTUBE: {\n        NOT_VALID: 'Link must be a Youtube link',\n        EMPTY: 'Enter a music link'\n    }\n};\nexport const VALIDATION_PASSED = '';","export const BOT_TOKEN =\n  \"NjFkZDcyNDctY2EzZC00ZWFlLTg2NGItZWJlOGY2YjlmNDZlN2E0NjJhODYtNzBj_PF84_1eb65fdf-9643-417f-9974-ad72cae0e10f\";\n\nexport const HOST = \"https://shakedzrihen.github.io/chillbot/#\";\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ResourcePicker from \"./ResourcePicker\";\nimport GIFs from \"../resources/gifs\";\nimport Button from \"@material-ui/core/Button\";\nimport buildCard from \"../resources/baseCard\";\nimport generateMessage from \"../resources/botMessage\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { VALIDATION_ERRORS, VALIDATION_PASSED } from \"./consts\";\nimport clsx from \"clsx\";\nimport { BOT_TOKEN, HOST } from \"../consts\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport \"./style.scss\";\n\nconst CardForm = (props) => {\n  const [image, setImage] = useState(GIFs[0]);\n  const [musicLink, setMusicLink] = useState(\"\");\n  const [email, setEmail] = useState(props.email);\n  const [description, setDescription] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentUser] = useState(localStorage.getItem(\"currentUser\"));\n\n  const [emailError, setEmailErrorMsg] = useState(VALIDATION_PASSED);\n  const isEmailError = emailError !== VALIDATION_PASSED;\n  const [youtubeError, setYoutubeErrorMsg] = useState(VALIDATION_PASSED);\n  const isYoutubeError = youtubeError !== VALIDATION_PASSED;\n  const [showToast, setShowToast] = useState(false);\n\n  const Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} className=\"alert\"/>;\n  };\n\n  const handleSend = async () => {\n    setLoading(true);\n    const name = await fetch(`https://webexapis.com/v1/people?email=${email}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${BOT_TOKEN}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => res.items[0].nickName)\n      .catch(() => email);\n\n    const sender = await fetch(\n      `https://webexapis.com/v1/people?email=${currentUser}`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${BOT_TOKEN}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => res.items[0].nickName)\n      .catch(() => currentUser);\n\n    if (!image || !email || !musicLink) {\n      setError(\"Some field is missing!\");\n      setLoading(false);\n      return;\n    }\n\n    const formattedLink =\n      HOST +\n      `/songHug?receiver=${email}&displayLink=${musicLink}&sender=${sender}&senderMail=${currentUser}`;\n    console.log(\"formattedLink\", formattedLink);\n    const title = `Hi ${name}!`;\n    const senderTitle = `${sender} sent you SongHug`;\n    const card = buildCard(title, senderTitle, image, formattedLink, description);\n    const message = generateMessage(card, email);\n\n    await fetch(\"https://webexapis.com/v1/messages\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${BOT_TOKEN}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(message),\n    })\n      .catch((e) => console.log(e))\n      .then(() => setLoading(false));\n\n    setShowToast(true);\n  };\n\n  const handleDescriptionChane = (event) => {\n    const newDescription = event.target.value;\n    if (newDescription.length <= 65) {\n      setDescription(newDescription);\n    }\n  };\n\n  const handleYoutubeLinkChange = (event) => {\n    const musicLink = event.target.value;\n    setMusicLink(musicLink);\n\n    if (musicLink && musicLink.trim().length > 0) {\n      if (musicLink.indexOf(\"youtube.com/watch\") <= 0) {\n        setYoutubeErrorMsg(VALIDATION_ERRORS.YOUTUBE.NOT_VALID);\n        return false;\n      }\n      setYoutubeErrorMsg(VALIDATION_PASSED);\n      return true;\n    }\n\n    setYoutubeErrorMsg(VALIDATION_ERRORS.YOUTUBE.EMPTY);\n    return false;\n  };\n\n  const handleEmailChange = (event) => {\n    const emailValue = event.target.value;\n    setEmail(emailValue);\n\n    if (emailValue && emailValue.trim().length > 0) {\n      if (emailValue.indexOf(\"cisco.com\") <= 0) {\n        setEmailErrorMsg(VALIDATION_ERRORS.EMAIL.NOT_VALID);\n        return false;\n      }\n      setEmailErrorMsg(VALIDATION_PASSED);\n      return true;\n    }\n\n    setEmailErrorMsg(VALIDATION_ERRORS.EMAIL.EMPTY);\n    return false;\n  };\n\n  return (\n    <div className=\"cardFromContainer\">\n      <div className=\"flex spaceBetween\">\n        <div>\n          <div className=\"fieldContainer\">\n            <label htmlFor=\"email\" className=\"textboxLabel\">\n              Send a SongHug for (email)\n            </label>\n            <TextField\n              id=\"outlined-error-helper-text\"\n              variant=\"outlined\"\n              className={`textbox email ${isEmailError ? \"error\" : \"\"}`}\n              value={email}\n              onChange={handleEmailChange}\n              helperText={emailError}\n              error={isEmailError}\n            />\n          </div>\n          <div className=\"fieldContainer\">\n            <label htmlFor=\"youtubeLink\" className=\"textboxLabel\">\n              Paste YouTube Link here\n            </label>\n            <TextField\n              id=\"outlined-error-helper-text\"\n              variant=\"outlined\"\n              className={`textbox ${isYoutubeError ? \"error\" : \"\"}`}\n              multiline\n              rows={1}\n              value={musicLink}\n              onChange={handleYoutubeLinkChange}\n              helperText={youtubeError}\n              error={isYoutubeError}\n            />\n          </div>\n          <div className=\"fieldContainer\">\n            <label htmlFor=\"message\" className=\"textboxLabel\">\n              Add Message\n            </label>\n            <TextField\n              multiline\n              id=\"dscription\"\n              variant=\"outlined\"\n              className=\"textbox\"\n              value={description}\n              onChange={handleDescriptionChane}\n              rows={4}\n            />\n          </div>\n        </div>\n\n        <div className=\"resourcePickerContainer\">\n          <ResourcePicker\n            title=\"Choose a GIF\"\n            resources={GIFs}\n            allowBlank={false}\n            value={image}\n            setValue={setImage}\n          />\n        </div>\n      </div>\n\n      {loading ? (\n        <CircularProgress disableShrink className=\"spinner\" />\n      ) : (\n        <Button className={clsx(\"sendButton\")} onClick={handleSend}>\n          Send SongHug\n        </Button>\n      )}\n      <Snackbar\n        open={showToast}\n        autoHideDuration={5000}\n        onClose={() => setShowToast(false)}\n      >\n        <Alert onClose={() => setShowToast(false)} severity=\"success\">\n          SongHug is on his way!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CardForm;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { COLORS } from \"./theme\";\n\nexport default makeStyles((theme) => ({\n  pageTitle: {\n    color: COLORS.PRIMERY,\n    margin: '20px auto',\n    textAlign: \"center\",\n  },\n  title: {\n    flexGrow: 1,\n    color: COLORS.SECONDARY,\n  },\n  container: {\n    margin: \"3% auto\",\n  },\n  multilineColor: {\n    color: COLORS.SECONDARY,\n  },\n  card: {\n    minWidth: 400,\n    minHeight: 620,\n    textAlign: \"center\",\n  },\n  contentContainer: {\n    display: \"flex\",\n    flexFlow: \"row\",\n    justifyContent: \"space-between\",\n  },\n  cardContainer: {},\n  media: {\n    height: 400,\n    width: 400,\n  },\n  cardText: {\n    color: COLORS.PRIMERY,\n  },\n  cardContainer: {\n    border: \"15px solid transparent\",\n    borderImage:\n      \"url(https://www.kudoboard.com/images/lines-background.png) 100 repeat\",\n  },\n  sendButton: {\n    margin: \"16px auto\",\n    width: \"100%\",\n    backgroundColor: COLORS.PRIMERY,\n    color: COLORS.OFFWHITE,\n    \"&:hover\": {\n      backgroundColor: COLORS.PRIMARY_SHADE,\n      color: COLORS.OFFWHITE,\n    },\n  },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport { Container } from \"@material-ui/core\";\nimport { useLocation } from \"react-router-dom\";\nimport CardForm from \"./CardForm/CardForm\";\nimport useStyles from \"./style\";\nimport clsx from \"clsx\";\nimport \"./SendSongPage.scss\";\n\nconst SendSongPage = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const classes = useStyles();\n  const history = useHistory();\n  const [currentUser] = useState(localStorage.getItem(\"currentUser\"));\n  console.log(\"currentUser\", currentUser);\n\n  if (!currentUser) {\n    history.push({\n      pathname: \"/register\",\n    });\n    return;\n  }\n  useEffect(() => {\n    document.body.id = \"sendSongBody\";\n\n    return () => {\n      document.body.id = \"\";\n    };\n  }, []);\n\n  return (\n    <div className=\"sendSongFrame\">\n      <Container\n        className={clsx(classes.container, \"sendSongHugContainer\")}\n        maxWidth=\"xl\"\n      >\n        <Header title={\"Make Someone Happy!\"} />\n        <div className={classes.contentContainer}>\n          <CardForm email={query.get(\"email\")} />\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default SendSongPage;\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./SongHug.scss\";\n\nconst SongHug = (props) => {\n  const config = {\n    youtube: {\n      playerVars: { autoplay: 1 },\n    },\n  };\n\n  const handleSend = (email) => {\n    console.log(email);\n    localStorage.setItem(\"currentUser\", props.receiver);\n  };\n\n  return (\n    <div className=\"songHugContainer\">\n      <ReactPlayer url={props.displayLink} config={config} playing={true} />\n      <div className=\"description\">\n        {props.sender} sent you a <span className=\"songhug\">SongHug!</span>\n      </div>\n      <div className=\"buttons\">\n        <Link to={`/sendSong?email=${props.senderMail}`}  style={{ marginBottom: \"40px\" }}>\n          <p className=\"sendBack\" onClick={() => handleSend(props.sender)}>\n            Send {props.sender} a SongHug Back {\">>\"}\n          </p>\n        </Link>\n        <Link to={`/sendSong`}>\n          <Button\n            className=\"sendButton\"\n            onClick={() => handleSend(props.sender)}\n          >\n            Send SongHug\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SongHug;\n","import React, { useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport clsx from \"clsx\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./SongHugPage.scss\";\nimport SongHug from \"./SongHug/SongHug\";\n\nconst SongHugPage = () => {\n  const query = new URLSearchParams(useLocation().search)\n  const classes = useStyles();\n\n  useEffect(() => {\n    document.body.id = \"songHugBody\";\n\n    return () => {\n      document.body.id = \"\";\n    };\n  }, []);\n\n  return (\n    <div className=\"songHugFrame\">\n      <Container\n        className={clsx(classes.container, \"songHugContainer\")}\n        maxWidth=\"xl\"\n      >\n        <SongHug\n          receiver={query.get(\"receiver\")}\n          displayLink={query.get(\"displayLink\")}\n          sender={query.get(\"sender\")}\n          senderMail={query.get(\"senderMail\")} />\n      </Container>\n    </div>\n  );\n};\n\nexport default SongHugPage;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport { Container } from \"@material-ui/core\";\nimport useStyles from \"./style\";\nimport clsx from \"clsx\";\nimport \"./RegisterPage.scss\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterPage = () => {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    document.body.id = \"sendSongBody\";\n\n    return () => {\n      document.body.id = \"\";\n    };\n  }, []);\n\n  const handleContinue = (event) => {\n    localStorage.setItem(\"currentUser\", email);\n    history.push({\n      pathname: \"/sendsong\",\n    });\n  };\n\n  return (\n    <div className=\"registerContainer\">\n      <Container\n        className={clsx(classes.container, \"sendSongHugContainer\")}\n        maxWidth=\"xl\"\n      >\n        <Header title={\"Nice to Meet ya!\"} />\n        <p className=\"subtitle\">\n          Before we start let’s get to know you a little bit\n        </p>\n        <div className=\"fieldContainer\">\n          <label htmlFor=\"email\" className=\"textboxLabel\">\n            what is your cisco mail?\n          </label>\n          <TextField\n            id=\"outlined-error-helper-text\"\n            variant=\"outlined\"\n            className={`textbox email`}\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </div>\n        <Button className={clsx(\"sendButton\")} onClick={handleContinue}>\n          Continue\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./MainPage\";\nimport SendSongPage from \"./SendSongPage\";\nimport SongHugPage from \"./SongHugPage\";\nimport RegisterPage from \"./RegisterPage\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/sendsong\">\n          <SendSongPage />\n        </Route>\n        <Route path=\"/songhug\">\n          <SongHugPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport \"./style.scss\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}